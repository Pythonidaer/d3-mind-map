import { COLORS } from '../../../theme/colors';

export const nodes = [
  {
    id: 'root',
    label: 'LLM Design Patterns\nand Anti-Patterns',
    shape: 'roundRect',
    color: 'root',
    definition: 'Proven architectural patterns for effective LLM system design, and common mistakes that undermine reliability and maintainability.',
  },
  {
    id: 'design_patterns',
    label: 'Effective\nDesign Patterns',
    shape: 'ellipse',
    color: 'nodePositive1',
    parent: 'root',
    definition: 'Reliable architectural techniques that maximize LLM application success across reasoning, retrieval, workflows, and safety.',
  },
  {
    id: 'prompt_engineering_patterns',
    label: 'Prompt Engineering\nBest Practices',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'design_patterns',
    definition: 'Using structured, tested prompts with validation strategies to guide LLM behavior reliably.',
  },
  {
    id: 'rag_architecture',
    label: 'Retrieval-Augmented\nGeneration (RAG)',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'design_patterns',
    definition: 'Augment LLMs by retrieving external, up-to-date, verified information to ground responses.',
  },
  {
    id: 'multi_agent_swarm',
    label: 'Multi-Agent\nSwarm Systems',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'design_patterns',
    definition: 'Using multiple specialized agents coordinating via planning layers to solve complex tasks collaboratively.',
  },
  {
    id: 'react_prompting',
    label: 'ReAct\n(Reasoning and Acting)',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'design_patterns',
    definition: 'Alternating between reasoning and tool usage in a structured loop to improve task handling and external integrations.',
  },
  {
    id: 'prompt_templates',
    label: 'Prompt Templates\nand Libraries',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'design_patterns',
    definition: 'Predefining prompt formats for consistency, testability, and easier maintenance across use cases.',
  },
  {
    id: 'tree_of_thoughts',
    label: 'Tree of\nThoughts',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'design_patterns',
    definition: 'Exploring multiple reasoning paths in parallel to improve complex problem-solving and decision-making quality.',
  },
  {
    id: 'anti_patterns',
    label: 'Common\nAnti-Patterns',
    shape: 'hexagon',
    color: 'nodeNegative1',
    parent: 'root',
    definition: 'Mistakes and poor design habits that degrade LLM application reliability, security, and user experience.',
  },
  {
    id: 'god_object_prompt',
    label: 'God Object\nPrompt',
    shape: 'rect',
    color: 'nodeNegative2',
    parent: 'anti_patterns',
    definition: 'Cramming multiple unrelated tasks or intents into a single massive prompt without modularization.',
  },
  {
    id: 'spaghetti_workflows',
    label: 'Spaghetti\nWorkflows',
    shape: 'rect',
    color: 'nodeNegative2',
    parent: 'anti_patterns',
    definition: 'Tightly coupling prompts, tools, and logic into tangled, untestable, hard-to-maintain flows.',
  },
  {
    id: 'unvalidated_outputs',
    label: 'Unvalidated\nLLM Outputs',
    shape: 'rect',
    color: 'nodeNegative2',
    parent: 'anti_patterns',
    definition: 'Passing LLM outputs directly into other systems or UIs without safety checks, hallucination detection, or verification.',
  },
  {
    id: 'unsecured_memory',
    label: 'Unsecured\nMemory or Tools',
    shape: 'rect',
    color: 'nodeNegative2',
    parent: 'anti_patterns',
    definition: 'Allowing LLMs unrestricted access to memory stores or tool APIs without security, authorization, or sanity checks.',
  },
  {
    id: 'no_logging_observability',
    label: 'No Logging\nor Observability',
    shape: 'rect',
    color: 'nodeNegative2',
    parent: 'anti_patterns',
    definition: 'Failing to log LLM inputs, outputs, errors, or metadata, making debugging and improvement extremely difficult.',
  },
];

export const links = [
  { source: 'root', target: 'design_patterns' },
  { source: 'design_patterns', target: 'prompt_engineering_patterns' },
  { source: 'design_patterns', target: 'rag_architecture' },
  { source: 'design_patterns', target: 'multi_agent_swarm' },
  { source: 'design_patterns', target: 'react_prompting' },
  { source: 'design_patterns', target: 'prompt_templates' },
  { source: 'design_patterns', target: 'tree_of_thoughts' },

  { source: 'root', target: 'anti_patterns' },
  { source: 'anti_patterns', target: 'god_object_prompt' },
  { source: 'anti_patterns', target: 'spaghetti_workflows' },
  { source: 'anti_patterns', target: 'unvalidated_outputs' },
  { source: 'anti_patterns', target: 'unsecured_memory' },
  { source: 'anti_patterns', target: 'no_logging_observability' },
];
