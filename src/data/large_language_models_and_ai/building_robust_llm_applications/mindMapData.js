import { COLORS } from '../../../theme/colors';

export const nodes = [
  {
    id: 'root',
    label: 'Building and Deploying\nLLM Applications',
    shape: 'roundRect',
    color: 'root',
    definition: 'Steps, considerations, and workflows for moving from LLM prototype to production-ready deployment.',
  },
  {
    id: 'development_process',
    label: 'Development\nProcess',
    shape: 'ellipse',
    color: 'nodePositive1',
    parent: 'root',
    definition: 'Planning, data gathering, and experimentation required before production deployment.',
  },
  {
    id: 'requirements_and_use_cases',
    label: 'Define Requirements\nand Use Cases',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'development_process',
    definition: 'Clarify the applicationâ€™s goals, success metrics, user needs, and boundary conditions early.',
  },
  {
    id: 'data_curation',
    label: 'Data Curation\nand Preparation',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'development_process',
    definition: 'Collect and prepare high-quality datasets for fine-tuning, retrieval, evaluation, or testing purposes.',
  },
  {
    id: 'prompt_engineering_testing',
    label: 'Prompt Engineering\nand Testing',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'development_process',
    definition: 'Design, test, and iterate prompts to elicit consistent and correct LLM behavior across scenarios.',
  },
  {
    id: 'model_selection_and_tuning',
    label: 'Model Selection\nand Fine-Tuning',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'development_process',
    definition: 'Choose a foundation model and optionally fine-tune or augment it to match domain-specific needs.',
  },
  {
    id: 'deployment_workflow',
    label: 'Deployment\nWorkflow',
    shape: 'ellipse',
    color: 'nodePositive1',
    parent: 'root',
    definition: 'Key technical steps and best practices when preparing LLM applications for production launch.',
  },
  {
    id: 'logging_and_monitoring',
    label: 'Logging and\nMonitoring',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'deployment_workflow',
    definition: 'Capture inputs, outputs, and system metadata for observability, debugging, and auditing.',
  },
  {
    id: 'versioning_and_reproducibility',
    label: 'Versioning and\nReproducibility',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'deployment_workflow',
    definition: 'Track model versions, prompt changes, and configuration updates to ensure traceability.',
  },
  {
    id: 'feedback_loops',
    label: 'User Feedback\nand Improvement Loops',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'deployment_workflow',
    definition: 'Collect user feedback systematically to continuously improve prompts, models, and UX.',
  },
  {
    id: 'scalability_and_latency',
    label: 'Scalability\nand Latency Optimization',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'deployment_workflow',
    definition: 'Optimize infrastructure, batching, caching, and model size to maintain responsiveness under load.',
  },
  {
    id: 'llmops_principles',
    label: 'LLMOps\nand Continuous \nOperations',
    shape: 'ellipse',
    color: 'nodePositive1',
    parent: 'root',
    definition: 'Long-term practices for maintaining, monitoring, and evolving LLM systems post-launch.',
  },
  {
    id: 'continuous_monitoring',
    label: 'Continuous Monitoring\nand Alerting',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'llmops_principles',
    definition: 'Ongoing system health checks, anomaly detection, and automated alerts for failures or drift.',
  },
  {
    id: 'retraining_and_refinement',
    label: 'Periodic Retraining\nand Refinement',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'llmops_principles',
    definition: 'Fine-tune or update models periodically to account for new data, changing contexts, or performance decay.',
  },
  {
    id: 'security_hardening',
    label: 'Security\nHardening',
    shape: 'rect',
    color: 'nodePositive2',
    parent: 'llmops_principles',
    definition: 'Implement defenses against prompt injection, data breaches, tool misuse, and other attack surfaces.',
  },
];

export const links = [
  { source: 'root', target: 'development_process' },
  { source: 'development_process', target: 'requirements_and_use_cases' },
  { source: 'development_process', target: 'data_curation' },
  { source: 'development_process', target: 'prompt_engineering_testing' },
  { source: 'development_process', target: 'model_selection_and_tuning' },

  { source: 'root', target: 'deployment_workflow' },
  { source: 'deployment_workflow', target: 'logging_and_monitoring' },
  { source: 'deployment_workflow', target: 'versioning_and_reproducibility' },
  { source: 'deployment_workflow', target: 'feedback_loops' },
  { source: 'deployment_workflow', target: 'scalability_and_latency' },

  { source: 'root', target: 'llmops_principles' },
  { source: 'llmops_principles', target: 'continuous_monitoring' },
  { source: 'llmops_principles', target: 'retraining_and_refinement' },
  { source: 'llmops_principles', target: 'security_hardening' },
];
